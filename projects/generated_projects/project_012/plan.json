{
  "description": "A simple, static web application designed as a personal 'Coping Toolkit'. It provides interactive features for mental well-being: a guided breathing exercise, a temporary space for anonymous thought venting, and basic daily mood logging with local storage persistence.",
  "features": [
    "Guided 'Breathe In/Out' exercise with visual animation and timer.",
    "Temporary, non-persistent 'Venting Space' text area for journaling thoughts.",
    "Simple daily mood logging (select mood, add optional note) with data saved in browser's localStorage.",
    "Display of past mood logs for personal reflection."
  ],
  "steps": [
    "**1. Project Setup:** Create `index.html`, `style.css`, and `script.js` files.",
    "**2. HTML Structure (`index.html`):**",
    "   a. Set up basic HTML5 boilerplate, link `style.css` in `<head>` and `script.js` before `</body>`.",
    "   b. Create a main container. Inside, add distinct sections for 'Breathing Exercise', 'Venting Space', and 'Mood Log'.",
    "   c. **Breathing Section:** Include a `div` for displaying instructions (e.g., 'Breathe In'), a visual element (e.g., a simple `div` circle), and 'Start'/'Stop' buttons.",
    "   d. **Venting Section:** Add a `<textarea>` element with a placeholder and a 'Clear' button.",
    "   e. **Mood Log Section:** Include radio buttons or a dropdown for mood selection (e.g., 'Happy', 'Neutral', 'Sad'), a small `<textarea>` for notes, a 'Save Mood' button, and a `div` to display a list of saved mood entries.",
    "**3. Basic CSS Styling (`style.css`):**",
    "   a. Apply general page styling (fonts, colors, layout for sections using flexbox or grid).",
    "   b. Style buttons, text areas, and other interactive elements for a clean look.",
    "   c. Create basic styling for the breathing visual element (e.g., a centered circle) and CSS classes for animation (e.g., `scale-up`, `scale-down`).",
    "**4. JavaScript - Breathing Exercise (`script.js`):**",
    "   a. Get references to the breathing instruction display, visual element, and start/stop buttons.",
    "   b. Implement a `startBreathing()` function that uses `setInterval` to cycle through text ('Breathe In', 'Hold', 'Breathe Out') and apply/remove CSS animation classes to the visual element.",
    "   c. Implement a `stopBreathing()` function to clear the interval and reset the display/visuals.",
    "   d. Add event listeners to the 'Start' and 'Stop' buttons to call respective functions.",
    "**5. JavaScript - Venting Space (`script.js`):**",
    "   a. Get a reference to the venting `<textarea>` and its 'Clear' button.",
    "   b. Add an event listener to the 'Clear' button to set the `<textarea>.value` to an empty string.",
    "**6. JavaScript - Mood Logging (`script.js`):**",
    "   a. Get references to mood input(s), note textarea, 'Save Mood' button, and the mood logs display `div`.",
    "   b. Implement a `saveMood()` function:",
    "      i. Retrieve the selected mood and note text.",
    "      ii. Get the current date.",
    "      iii. Load existing mood logs from `localStorage` (parse JSON array). If none, initialize an empty array.",
    "      iv. Add the new mood entry (date, mood, note) to the array.",
    "      v. Save the updated array back to `localStorage` (stringify JSON).",
    "      vi. Call `displayMoodLogs()` to refresh the view.",
    "   c. Implement a `displayMoodLogs()` function:",
    "      i. Clear the current content of the mood logs display `div`.",
    "      ii. Load mood logs from `localStorage`.",
    "      iii. Iterate through the logs and dynamically create HTML elements (e.g., `div` or `p` tags) to display each log entry, appending them to the logs display `div`.",
    "   d. Add an event listener to the 'Save Mood' button to call `saveMood()`.",
    "   e. Call `displayMoodLogs()` once when `script.js` loads to show any previously saved logs."
  ],
  "dependencies": []
}