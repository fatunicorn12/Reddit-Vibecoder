{
  "description": "A static web application that presents users with short, interactive social scenarios related to food and fitness. Users make choices that affect a visible 'motivation' score. The goal is to maintain or increase motivation, with a restart option for replayability.",
  "features": [
    "Display interactive social scenarios with descriptive text.",
    "Present two choice options for each scenario (e.g., healthy vs. peer pressure).",
    "Dynamically update a 'motivation' score based on user choices.",
    "Visually display the current motivation score.",
    "Provide immediate feedback on choice consequences (motivation change).",
    "End condition: Motivation drops to zero, prompting a restart.",
    "Restart button to reset the game state and play again."
  ],
  "steps": [
    "**1. `index.html` (Structure):**",
    "   - Create a basic HTML5 boilerplate.",
    "   - Add a main `div` container for the app (`id='app'`).",
    "   - Inside, include an `h1` for the title, a `p` tag for the scenario text (`id='scenario-text'`).",
    "   - Create a `div` for choice buttons (`id='choices'`).",
    "   - Add a `p` tag to display the motivation score (`id='motivation-score'`).",
    "   - Add a 'Restart Game' button (`id='restart-btn'`), initially hidden.",
    "   - Link `style.css` in the `<head>` and `script.js` at the end of `<body>`.",
    "**2. `style.css` (Styling):**",
    "   - Basic styling for `body` (font, background, centering).",
    "   - Style the main `div#app` for a clean layout (e.g., `max-width`, `margin: auto`, `padding`, `border`).",
    "   - Style `h1`, `p#scenario-text`, `p#motivation-score` for readability.",
    "   - Style the choice buttons (e.g., `background-color`, `padding`, `margin`, `cursor`).",
    "   - Add a style to initially hide the restart button (`display: none;`).",
    "**3. `script.js` (Logic):**",
    "   - Define an array of JavaScript objects, `scenarios`. Each object should represent a scenario with:",
    "     - `text`: The scenario description string.",
    "     - `options`: An array of two choice objects. Each choice object has `text` (button label) and `impact` (integer, e.g., +10, -15).",
    "   - Initialize global variables: `currentScenarioIndex = 0`, `motivation = 50` (starting score, e.g., out of 100).",
    "   - Create a `displayScenario()` function:",
    "     - Get the current scenario from `scenarios` array using `currentScenarioIndex`.",
    "     - Update `document.getElementById('scenario-text').textContent`.",
    "     - Clear previous choice buttons from `div#choices`.",
    "     - For each option in the current scenario, create a `<button>` element:",
    "       - Set `textContent` to `option.text`.",
    "       - Attach an `onclick` event listener that calls a `handleChoice(option.impact)` function.",
    "       - Append the button to `div#choices`.",
    "   - Create an `updateMotivationDisplay()` function to update `document.getElementById('motivation-score').textContent`.",
    "   - Create a `handleChoice(impact)` function:",
    "     - Add `impact` to the global `motivation` score.",
    "     - Clamp `motivation` between 0 and 100 (or chosen min/max).",
    "     - Call `updateMotivationDisplay()`.",
    "     - Increment `currentScenarioIndex`.",
    "     - Check for game end conditions:",
    "       - If `motivation <= 0`: Display a 'Game Over' message, hide choice buttons, show the restart button.",
    "       - If `currentScenarioIndex >= scenarios.length` (all scenarios played): Display a 'You finished!' message, hide choices, show restart button.",
    "       - Else: Call `displayScenario()` to load the next scenario.",
    "   - Create a `startGame()` function:",
    "     - Reset `currentScenarioIndex = 0` and `motivation = 50`.",
    "     - Hide the restart button and ensure choices are visible.",
    "     - Call `updateMotivationDisplay()` and `displayScenario()` to start the first scenario.",
    "   - Add an event listener to `document.getElementById('restart-btn')` that calls `startGame()` on click.",
    "   - Call `startGame()` once at the end of the script to initialize the app."
  ],
  "dependencies": [
    "None (vanilla HTML, CSS, JavaScript)"
  ]
}